<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lab.sign.mappers.AdminMapper">

	<!--实体映射-->
	<resultMap id="base_result_map" type="lab.sign.entity.po.Admin">
		<!--手机号-->
		<result column="phone_number" property="phoneNumber"  />
		<!--名字（昵称）-->
		<result column="user_name" property="userName"  />
		<!--密码-->
		<result column="password" property="password"  />
		<!--管理员-->
		<result column="admin" property="admin"  />
	</resultMap>


	<!-- 通用查询结果列-->
	<sql id="base_column_list">
		 phone_number,user_name,password,admin
	</sql>

	<sql id="base_condition_filed">
			<if test="query.phoneNumber != null">
				 and  phone_number = #{query.phoneNumber}
			</if>
			<if test="query.userName != null and query.userName!=''">
				 and  user_name = #{query.userName}
			</if>
			<if test="query.password != null and query.password!=''">
				 and  password = #{query.password}
			</if>
			<if test="query.admin != null">
				 and  admin = #{query.admin}
			</if>
	</sql>
	<!-- 通用条件列-->
	<sql id="base_condition">
	 <where>
		 <include refid="base_condition_filed" />
	 </where>
	</sql>

	<!-- 通用查询条件列-->
	<sql id="query_condition">
	 <where>
			<include refid="base_condition_filed" />
			<if test="query.userNameFuzzy!= null  and query.userNameFuzzy!=''">
				 and  user_name like concat('%', #{query.userNameFuzzy}, '%')
			</if>
			<if test="query.passwordFuzzy!= null  and query.passwordFuzzy!=''">
				 and  password like concat('%', #{query.passwordFuzzy}, '%')
			</if>
	 </where>
	</sql>

	<!-- 查询集合-->
	<select id="selectList" resultMap="base_result_map" >
		 SELECT <include refid="base_column_list" /> FROM admin <include refid="query_condition" />
		 <if test="query.orderBy!=null">
			 order by ${query.orderBy}
		 </if>
		 <if test="query.simplePage!=null">
			 limit #{query.simplePage.start},#{query.simplePage.end}
		 </if>
	</select>

	<!-- 查询数量-->
	<select id="selectCount" resultType="java.lang.Integer" >
		 SELECT count(1) FROM admin <include refid="query_condition" />
	</select>

	<!-- 插入 （匹配有值的字段）-->
	<insert id="insert" parameterType="lab.sign.entity.po.Admin">
		 INSERT INTO admin
		 <trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="bean.phoneNumber != null">
				 phone_number,
			</if>
			<if test="bean.userName != null">
				 user_name,
			</if>
			<if test="bean.password != null">
				 password,
			</if>
			<if test="bean.admin != null">
				 admin,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="bean.phoneNumber!=null">
				 #{bean.phoneNumber},
			</if>
			<if test="bean.userName!=null">
				 #{bean.userName},
			</if>
			<if test="bean.password!=null">
				 #{bean.password},
			</if>
			<if test="bean.admin!=null">
				 #{bean.admin},
			</if>
		 </trim>
	</insert>

	<!-- 插入或者更新 （匹配有值的字段）-->
	<insert id="insertOrUpdate" parameterType="lab.sign.entity.po.Admin">
		 INSERT INTO admin
		 <trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.phoneNumber != null">
				 phone_number,
			</if>
			<if test="bean.userName != null">
				 user_name,
			</if>
			<if test="bean.password != null">
				 password,
			</if>
			<if test="bean.admin != null">
				 admin,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.phoneNumber!=null">
				 #{bean.phoneNumber},
			</if>
			<if test="bean.userName!=null">
				 #{bean.userName},
			</if>
			<if test="bean.password!=null">
				 #{bean.password},
			</if>
			<if test="bean.admin!=null">
				 #{bean.admin},
			</if>
		 </trim>
		 on DUPLICATE key update 
		 <trim prefix="" suffix="" suffixOverrides=",">
			<if test="bean.phoneNumber!=null">
				 phone_number = VALUES(phone_number),
			</if>
			<if test="bean.userName!=null">
				 user_name = VALUES(user_name),
			</if>
			<if test="bean.password!=null">
				 password = VALUES(password),
			</if>
			<if test="bean.admin!=null">
				 admin = VALUES(admin),
			</if>
		 </trim>
	</insert>

	<!-- 添加 （批量插入）-->
	<insert id="insertBatch" parameterType="lab.sign.entity.po.Admin">
		 INSERT INTO admin(
			 phone_number,
			 user_name,
			 password,
			 admin
		 )values
		 <foreach collection="list" item="item" separator=",">
			 (
				 #{item.phoneNumber},
				 #{item.userName},
				 #{item.password},
				 #{item.admin}
			 )
		 </foreach>
	</insert>

	<!-- 批量新增修改 （批量插入）-->
	<insert id="insertOrUpdateBatch" parameterType="lab.sign.entity.po.Admin">
		 INSERT INTO admin(
			 phone_number,
			 user_name,
			 password,
			 admin
		 )values
		 <foreach collection="list" item="item" separator=",">
			 (
				 #{item.phoneNumber},
				 #{item.userName},
				 #{item.password},
				 #{item.admin}
			 )
		 </foreach>
			on DUPLICATE key update 
			phone_number = VALUES(phone_number),
			user_name = VALUES(user_name),
			password = VALUES(password),
			admin = VALUES(admin)
	</insert>

	<!--多条件修改-->
	<update id="updateByParam" parameterType="lab.sign.entity.query.AdminQuery">
		 UPDATE admin
 		 <set> 
			<if test="bean.phoneNumber != null">
				 phone_number = #{bean.phoneNumber},
			</if>
			<if test="bean.userName != null">
				 user_name = #{bean.userName},
			</if>
			<if test="bean.password != null">
				 password = #{bean.password},
			</if>
			<if test="bean.admin != null">
				 admin = #{bean.admin},
			</if>
 		 </set>
 		 <include refid="query_condition" />
	</update>

	<!--多条件删除-->
	<delete id="deleteByParam">
		 delete from admin
 		 <include refid="query_condition" />
	</delete>

	<!-- 根据PhoneNumber修改-->
	<update id="updateByPhoneNumber" parameterType="lab.sign.entity.po.Admin">
		 UPDATE admin
 		 <set> 
			<if test="bean.userName != null">
				 user_name = #{bean.userName},
			</if>
			<if test="bean.password != null">
				 password = #{bean.password},
			</if>
			<if test="bean.admin != null">
				 admin = #{bean.admin},
			</if>
 		 </set>
 		 where phone_number=#{phoneNumber}
	</update>

	<!-- 根据PhoneNumber删除-->
	<delete id="deleteByPhoneNumber">
		delete from admin where phone_number=#{phoneNumber}
	</delete>

	<!-- 根据PrimaryKey获取对象-->
	<select id="selectByPhoneNumber" resultMap="base_result_map" >
		select <include refid="base_column_list" /> from admin where phone_number=#{phoneNumber}
	</select>

</mapper>